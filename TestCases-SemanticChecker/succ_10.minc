
%% stack : [peg id, stack size, bottom, ... , top, garbage, ... ]

bool printstack( num[] stk )
{
    num i;
    num[] arr;
    arr <- new num[stk[1]];
    i <- 0;
    while (i < arr.size)
    {
        arr[i] <- stk[i+2];
        i <- i + 1;
    }
    print arr;
    return true;
}

bool push( num[] stk, num val )
{
    stk[1] <- stk[1] + 1;
    stk[stk[1]+1] <- val;
    return true;
}

num pop( num[] stk )
{
    num top;
    top <- stk[stk[1]+1];
    stk[1] <- stk[1] - 1;
    return top;
}

bool printhanoi_sel( num sel, num[] peg_a , num[] peg_b , num[] peg_c )
{
    bool gbg;
    if ( sel = peg_a[0] ) { gbg <- printstack(peg_a); } else { }
    if ( sel = peg_b[0] ) { gbg <- printstack(peg_b); } else { }
    if ( sel = peg_c[0] ) { gbg <- printstack(peg_c); } else { }
    return true;
}

bool printhanoi( num[] peg_a , num[] peg_b , num[] peg_c )
{
    bool gbg;
    gbg <- printhanoi_sel(1, peg_a, peg_b, peg_c);
    gbg <- printhanoi_sel(2, peg_a, peg_b, peg_c);
    gbg <- printhanoi_sel(3, peg_a, peg_b, peg_c);
    print 9.99999999999999; %% print separator
    return true;
}

num hanoi( num n, num[] start , num[] aux , num[] target )
{
    num step ;
    bool gbg ;
    step <- 0;
    if ( n > 0 ) {
        step <- step + hanoi( n-1, start, target, aux );
        %% target.append(start.pop())
        gbg <- push(target, pop (start));
        gbg <- printhanoi(start, aux, target);
        step <- step + 1;
        step <- step + hanoi( n-1, aux, start, target );
    } else {}
    return step;
}

num main  ()
{
    num[] peg_a ;
    num[] peg_b ;
    num[] peg_c ;
    num n ;
    num i ;
    num steps ;
    bool gbg ;

    %% make all pegs empty
    peg_a <- new num[10]; peg_a[0] <- 1; peg_a[1] <- 0;
    peg_b <- new num[10]; peg_b[0] <- 2; peg_b[1] <- 0;
    peg_c <- new num[10]; peg_c[0] <- 3; peg_c[1] <- 0;
    %% add disks to peg_a
    n <- 5;
    peg_a[1] <- n;
    i <- 0;
    while ( i < n )
    {
        peg_a[i+2] <- n - i;
        i <- i + 1;
    }

    %% solve hanoi tower
    gbg <- printhanoi( peg_a, peg_b, peg_c );
    steps <- hanoi(n, peg_a, peg_b, peg_c);
    print steps;

    return 1;
}
